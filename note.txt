Topic: minimal changes to GDL such that a single/two player game is strongly winnable

1. the format of GDL

- only contains GDL keywords and the following types of rules.

init. 

legal :- 0+ many true/not true

next :- 0+ many true/not true, 0+ many does/not does

goal :- arbitary body

terminal :- arbitary body 

- must be grounded?


2. what are the allowed repairs?

legal :- 0+ many true/not true

next :- 0+ many true/not true, 0+ many does/not does

delete from the body of a rule 
add true/does to the body of a rule 
add a new rule
delete a rule


3. how to measure the cost?

1) weighted sum of the changes
    - single player case good
    - multiplayer case is bad, probably no solver 
2) set a limit for each of the 4 repairs, get a repair that is not exceeding the limits 



---------------------------------------------
input: arbitary valid grounded GDL with restrictions
next <- true+ | does+
legal <- true+

G = N \cup L \cup G'

allowed modifications: 
1) add/remove true/does from the body of N 
2) remove a rule from N/L 
3) add a new head to a rule of N (must remove the head first)
4) add the head of a new rule
5) add true/does from the body of new rules

claim: any set of rules with G' \cup  A_{p}^{true} |= terminal and goal(p,100) for all p \in Role has a 
repair such that the new game is weakly winnable

1) The ASP finds the minimal changes required to make a game weakly winnable within a certain number of steps
    termination and playability are ensured by additional constraints 
2) parallel computing + smaller encoding helps
3) lp2sat + kissat might work better for hard instances (we need to deal with the integrity constraints manually)

TODO:
1) termination? playability? --> easy but inefficient (co-NP, QBF) 
2) strong winnability? --> easy but might be inefficient/motivation?
